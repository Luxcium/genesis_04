// Generated by Copilot
import { z } from 'zod';

// --- Markets ---
export const ZMarket = z.object({
  name: z.string(),
  tradingVenues: z.array(z.string()),
  defaultTradingVenue: z.string(),
  primaryOrderRoutes: z.array(z.string()),
  secondaryOrderRoutes: z.array(z.string()),
  level1Feeds: z.array(z.string()),
  level2Feeds: z.array(z.string()),
  extendedStartTime: z.string(),
  startTime: z.string(),
  endTime: z.string(),
  extendedEndTime: z.string(),
  currency: z.string(),
  snapQuotesLimit: z.number(),
});
export const ZGetMarketsResponse = z.object({
  markets: z.array(ZMarket),
});

export const ZCandle = z.object({
  start: z.string(),
  end: z.string(),
  open: z.number(),
  high: z.number(),
  low: z.number(),
  close: z.number(),
  volume: z.number(),
});
export const ZMarketCandlesResponse = z.object({
  candles: z.array(ZCandle),
});
export const ZMarketCandlesRequest = z.object({
  id: z.number(),
  startTime: z.string(),
  endTime: z.string(),
  interval: z.string(),
});

export const ZQuote = z.object({
  symbol: z.string(),
  symbolId: z.number(),
  tier: z.string().optional(),
  bidPrice: z.number(),
  bidSize: z.number(),
  askPrice: z.number(),
  askSize: z.number(),
  lastTradePriceTrHrs: z.number().optional(),
  lastTradePrice: z.number(),
  lastTradeSize: z.number(),
  lastTradeTick: z.string(),
  lastTradeTime: z.string().optional(),
  volume: z.number(),
  openPrice: z.number(),
  highPrice: z.number(),
  lowPrice: z.number(),
  delay: z.boolean(),
  isHalted: z.boolean(),
});
export const ZGetMarketQuotesResponse = z.object({
  quotes: z.array(ZQuote),
});
