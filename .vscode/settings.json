{
  "github.copilot.chat.codeGeneration.useInstructionFiles": true,
  "github.copilot.chat.codeGeneration.instructions": [
    {
      "text": "Always add a comment: 'Created by luxcium with Copilot'."
    },
    {
      "text": "Always add a comment last lines: 'Created by luxcium © ${{year}} (MIT) with Copilot'."
    },
    {
      "text": "Always add a comment: '${{path to the file}}'. Place it high in the file under anything that must occur before or first"
    },
    {
      "text": "Explain and enforce pnpm-specific behaviors and commands in all generated instructions or code."
    },
    {
      "text": "strictly forbids the use of `export * from` syntax. All exports and imports must be named explicitly without exception."
    },
    {
      "text": "Always add a comment: 'Created by luxcium with Copilot'. Remove duplicates place at the bottom of new files only, or remove and replace those in other place, repeating or fixing."
    },
    {
      "file": ".github/copilot-instructions.md"
    }
  ],
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "file": ".copilot-commit-message-instructions.md"
    },
    {
      "text": "Use conventional commit, one emoji , message format. Use the present tense and imperative mood."
    },
    {
      "text": "Use the format: 'feat: <description>' for new features."
    },
    {
      "text": "Use the format: 'fix: <description>' for bug fixes."
    },
    {
      "text": "Use the format: 'chore: <description>' for other changes."
    },
    {
      "text": "Use the format: 'docs: <description>' for documentation changes."
    },
    {
      "text": "Use the format: 'style: <description>' for style changes."
    },
    {
      "text": "Use the format: 'refactor: <description>' for refactoring code."
    }
  ],
  // "github.copilot.chat.codeGeneration.instructions": [
  //   {
  //     "text": "Always add a comment: 'Created by luxcium with Copilot'."
  //   },
  //   {
  //     "text": "Always add a comment last lines: 'Created by luxcium © ${{year}} (MIT) with Copilot'."
  //   },
  //   {
  //     "text": "Explain and enforce pnpm-specific behaviors and commands in all generated instructions or code."
  //   },
  //   {
  //     "file": ".github/copilot-instructions.md"
  //   }
  // ],
  "editor.formatOnSave": true,
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "files.exclude": {
    "**/.git": true,
    "**/.DS_Store": true,
    "**/node_modules": true
  },
  "eslint.enable": true,
  "eslint.run": "onType",
  "eslint.validate": [
    "javascript",
    "typescript"
  ]
}